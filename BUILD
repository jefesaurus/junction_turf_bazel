package(default_visibility = ["//visibility:public"])

licenses(["permissive"])

filegroup(
    name = "junction_turf_sources",
    srcs = glob([
        "junction/**",
        "turf/**",
    ]),
)

TURF_HEADERS = [
    "include/turf/Affinity.h",
    "include/turf/c/atomic.h",
    "include/turf/c/impl/atomic_msvc.h",
    "include/turf/c/impl/compiler_gcc.h",
    "include/turf/c/impl/compiler_msvc.h",
    "include/turf/c/impl/atomic_gcc_arm.h",
    "include/turf/c/impl/atomic_gcc_x86-64.h",
    "include/turf/c/core.h",
    "include/turf/c/platform_detect.h",
    "include/turf/TID.h",
    "include/turf/RaceDetector.h",
    "include/turf/Core.h",
    "include/turf/Mutex.h",
    "include/turf/Semaphore.h",
    "include/turf/ConditionVariable.h",
    "include/turf/RWLock.h",
    "include/turf/Assert.h",
    "include/turf/Util.h",
    "include/turf/Trace.h",
    "include/turf/Atomic.h",
    "include/turf/ManualResetEvent.h",
    "include/turf/MemPage.h",
    "include/turf/Heap.h",
    "include/turf/Thread.h",
    "include/turf/TLSPtr.h",
    "include/turf/UTCTime.h",
    "include/turf/extra/SpinKicker.h",
    "include/turf/extra/JobDispatcher.h",
    "include/turf/extra/TimeWaster.h",
    "include/turf/extra/Options.h",
    "include/turf/extra/UniqueSequence.h",
    "include/turf/extra/Random.h",
    "include/turf/impl/Semaphore_Win32.h",
    "include/turf/impl/Trace_Counters.h",
    "include/turf/impl/Atomic_Native.h",
    "include/turf/impl/TLSPtr_POSIX.h",
    "include/turf/impl/Affinity_Linux.h",
    "include/turf/impl/Trace_MemLog.h",
    "include/turf/impl/Semaphore_Mach.h",
    "include/turf/impl/TID_Mach.h",
    "include/turf/impl/Mutex_CPP11.h",
    "include/turf/impl/TLSPtr_Boost.h",
    "include/turf/impl/MemPage_POSIX.h",
    "include/turf/impl/Mutex_SpinLock.h",
    "include/turf/impl/Atomic_Native64.inc",
    "include/turf/impl/CPUTimer_Mach.h",
    "include/turf/impl/Trace_Null.h",
    "include/turf/impl/CPUTimer_GCC.h",
    "include/turf/impl/Thread_Win32.h",
    "include/turf/impl/TLSPtr_Win32.h",
    "include/turf/impl/Semaphore_POSIX.h",
    "include/turf/impl/TID_POSIX.h",
    "include/turf/impl/ManualResetEvent_Win32.h",
    "include/turf/impl/Heap_DL.h",
    "include/turf/impl/RWLock_POSIX.h",
    "include/turf/impl/MemPage_Win32.h",
    "include/turf/impl/Thread_Boost.h",
    "include/turf/impl/Atomic_CPP11.h",
    "include/turf/impl/Mutex_Boost.h",
    "include/turf/impl/CPUTimer_POSIX.h",
    "include/turf/impl/RWLock_Win32.h",
    "include/turf/impl/CPUTimer_CPP11.h",
    "include/turf/impl/Atomic_Native32.inc",
    "include/turf/impl/Mutex_Win32.h",
    "include/turf/impl/Mutex_POSIX.h",
    "include/turf/impl/Atomic_Native16.inc",
    "include/turf/impl/Atomic_Native8.inc",
    "include/turf/impl/Heap_CRT.h",
    "include/turf/impl/ManualResetEvent_CondVar.h",
    "include/turf/impl/Thread_CPP11.h",
    "include/turf/impl/Affinity_FreeBSD.h",
    "include/turf/impl/ConditionVariable_POSIX.h",
    "include/turf/impl/CPUTimer_Win32.h",
    "include/turf/impl/RWLock_CPP14.h",
    "include/turf/impl/ConditionVariable_Win32.h",
    "include/turf/impl/ConditionVariable_CPP11.h",
    "include/turf/impl/Mutex_LazyInit.h",
    "include/turf/impl/Thread_POSIX.h",
    "include/turf/impl/Affinity_Win32.h",
    "include/turf/impl/TID_Win32.h",
    "include/turf/impl/Affinity_Null.h",
    "include/turf/impl/Atomic_Boost.h",
    "include/turf/impl/Affinity_Mach.h",
    "include/turf/BitField.h",
    "include/turf/CPUTimer.h",
    "include/turf_config.h",
    "include/turf_userconfig.h",
]

JUNCTION_HEADERS = [
    "include/junction/Core.h",
    "include/junction/ConcurrentMap_Leapfrog.h",
    "include/junction/details/Grampa.h",
    "include/junction/details/Linear.h",
    "include/junction/details/Leapfrog.h",
    "include/junction/SingleMap_Leapfrog.h",
    "include/junction/ConcurrentMap_Crude.h",
    "include/junction/QSBR.h",
    "include/junction/striped/AutoResetEvent.h",
    "include/junction/striped/Mutex.h",
    "include/junction/striped/ConditionBank.h",
    "include/junction/striped/ManualResetEvent.h",
    "include/junction/striped/ConditionPair.h",
    "include/junction/ConcurrentMap_Grampa.h",
    "include/junction/SingleMap_Linear.h",
    "include/junction/MapTraits.h",
    "include/junction/SimpleJobCoordinator.h",
    "include/junction/extra/MapAdapter.h",
    "include/junction/extra/impl/MapAdapter_Linear_RWLock.h",
    "include/junction/extra/impl/MapAdapter_Linear_Mutex.h",
    "include/junction/extra/impl/MapAdapter_CDS_Cuckoo.h",
    "include/junction/extra/impl/MapAdapter_Folly.h",
    "include/junction/extra/impl/MapAdapter_LibCuckoo.h",
    "include/junction/extra/impl/MapAdapter_Grampa.h",
    "include/junction/extra/impl/MapAdapter_Leapfrog.h",
    "include/junction/extra/impl/MapAdapter_Leapfrog_RWLock.h",
    "include/junction/extra/impl/MapAdapter_TBB.h",
    "include/junction/extra/impl/MapAdapter_NBDS.h",
    "include/junction/extra/impl/MapAdapter_Linear.h",
    "include/junction/extra/impl/MapAdapter_CDS_Michael.h",
    "include/junction/extra/impl/MapAdapter_StdMap.h",
    "include/junction/extra/impl/MapAdapter_Null.h",
    "include/junction/extra/impl/MapAdapter_Crude.h",
    "include/junction/extra/impl/MapAdapter_Tervel.h",
    "include/junction/ConcurrentMap_Linear.h",
    "include/junction_config.h",
    "include/junction_userconfig.h",
]

filegroup(
    name = "turf_headers",
    srcs = TURF_HEADERS,
)

filegroup(
    name = "junction_headers",
    srcs = JUNCTION_HEADERS,
)

sh_binary(
    name = "build_script",
    srcs = ["build_script.sh"],
)

genrule(
    name = "junction_turf",
    srcs = [
        ":junction_turf_sources",
    ],
    outs = TURF_HEADERS + JUNCTION_HEADERS + [
        "lib/libturf.a",
        "lib/libjunction.a",
    ],
    # Run the config & build script.
    # Edit build options there, but the inputs and outputs need to be kept in
    # sync with those laid out above.
    cmd = "$(location :build_script) --install_dir=$$(pwd)/$(@D)",
    tools = [":build_script"],
)

cc_library(
    name = "turf",
    srcs = ["lib/libturf.a"],
    hdrs = [":turf_headers"],
    includes = ["./"],
    linkstatic = 1,
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
)

cc_library(
    name = "junction",
    srcs = ["lib/libjunction.a"],
    hdrs = [":junction_headers"],
    includes = ["./"],
    linkstatic = 1,
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
    deps = [":turf"],
)
